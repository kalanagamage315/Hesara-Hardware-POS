/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.DateTime;
import Controller.ValidateStockBill;
import Model.ConnectionProvider;
import Model.GetFromDatabase;
import Model.InsertUpdateDelete;
import Model.Item;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author kalan
 */
public class Cashier extends javax.swing.JFrame implements Printable {

    /**
     * Creates new form Cashier
     */
    public Cashier() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        caBilling = new javax.swing.JPanel();
        txtcaBillIcode = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtcaBillIquant = new javax.swing.JTextField();
        txtcaBillIdisc = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        btncaBillAdd = new javax.swing.JButton();
        txtcaBillIitmnumber = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        btncaBillRemove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablecaBill = new javax.swing.JTable();
        btncaBillClear = new javax.swing.JButton();
        btncaBill = new javax.swing.JButton();
        txtnumofitm = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtcaBillBalance = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        txtcaBillPay = new javax.swing.JTextField();
        txtcaBillTotalDisc = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtcaBillTotal = new javax.swing.JTextField();
        CalcaFinalPayable = new javax.swing.JButton();
        txtcaTotalPayableAmount = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        billShowStock = new javax.swing.JTable();
        CheckStkBill = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        BillID = new javax.swing.JTextField();
        CancelBill = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        givenPrice = new javax.swing.JTextField();
        btnCancelAfterBill = new javax.swing.JButton();
        caEditLogin = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtcaProfUpuname = new javax.swing.JTextField();
        txtcaProfUppswd = new javax.swing.JPasswordField();
        txtcaProfUpnewuname = new javax.swing.JTextField();
        txtcaProfUpnewpswd = new javax.swing.JPasswordField();
        btncaProfUNPSUpdate = new javax.swing.JButton();
        ClearEditLogin = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        btnCheckSTK = new javax.swing.JButton();
        ClearCheckstk = new javax.swing.JButton();
        txtcaViewStk = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        caCheckStTb = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        Home = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 722));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hesara Hardware");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, -1, -1));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        caBilling.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtcaBillIcode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        caBilling.add(txtcaBillIcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 180, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Item Code");
        caBilling.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Quantity");
        caBilling.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        txtcaBillIquant.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaBillIquant.setText("0");
        caBilling.add(txtcaBillIquant, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 180, -1));

        txtcaBillIdisc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaBillIdisc.setText("0");
        caBilling.add(txtcaBillIdisc, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 180, -1));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Item Discount");
        caBilling.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        btncaBillAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncaBillAdd.setText("Add");
        btncaBillAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btncaBillAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncaBillAddActionPerformed(evt);
            }
        });
        caBilling.add(btncaBillAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 90, -1));

        txtcaBillIitmnumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        caBilling.add(txtcaBillIitmnumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 440, 180, 30));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Row");
        caBilling.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 450, -1, 20));

        btncaBillRemove.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncaBillRemove.setText("Remove");
        btncaBillRemove.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btncaBillRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncaBillRemoveActionPerformed(evt);
            }
        });
        caBilling.add(btncaBillRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 90, 30));

        tablecaBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ite.No", "ItemCode", "Item Name", "Quantity", "Discount", "Price"
            }
        ));
        jScrollPane1.setViewportView(tablecaBill);

        caBilling.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 500, 400));

        btncaBillClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncaBillClear.setText("Clear");
        btncaBillClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btncaBillClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncaBillClearActionPerformed(evt);
            }
        });
        caBilling.add(btncaBillClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 550, 70, 30));

        btncaBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncaBill.setText("Bill");
        btncaBill.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btncaBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncaBillActionPerformed(evt);
            }
        });
        caBilling.add(btncaBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 550, 80, 30));

        txtnumofitm.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        caBilling.add(txtnumofitm, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 480, 180, 30));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Number of Items");
        caBilling.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 480, -1, 20));

        txtcaBillBalance.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaBillBalance.setText("0");
        caBilling.add(txtcaBillBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, 190, 30));

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel43.setText("Balance");
        caBilling.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, -1, 20));

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel42.setText("Pay");
        caBilling.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, 20));

        txtcaBillPay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaBillPay.setText("0");
        caBilling.add(txtcaBillPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, 190, 30));

        txtcaBillTotalDisc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaBillTotalDisc.setText("0");
        caBilling.add(txtcaBillTotalDisc, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 180, 30));

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel41.setText("Given Price");
        caBilling.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, 20));

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel40.setText("Total");
        caBilling.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, 20));

        txtcaBillTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaBillTotal.setText("0.00");
        txtcaBillTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcaBillTotalActionPerformed(evt);
            }
        });
        caBilling.add(txtcaBillTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 180, 30));

        CalcaFinalPayable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CalcaFinalPayable.setText("CalFinal");
        CalcaFinalPayable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CalcaFinalPayable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcaFinalPayableActionPerformed(evt);
            }
        });
        caBilling.add(CalcaFinalPayable, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 70, 30));

        txtcaTotalPayableAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaTotalPayableAmount.setText("0");
        caBilling.add(txtcaTotalPayableAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 190, 30));

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel44.setText("Payable amount");
        caBilling.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        billShowStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item", "Quantity", "Price", "Discount"
            }
        ));
        billShowStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billShowStockMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(billShowStock);
        if (billShowStock.getColumnModel().getColumnCount() > 0) {
            billShowStock.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        caBilling.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, 480, 400));

        CheckStkBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CheckStkBill.setText("Check");
        CheckStkBill.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CheckStkBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckStkBillActionPerformed(evt);
            }
        });
        caBilling.add(CheckStkBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 90, 30));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Clear");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        caBilling.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 90, 30));

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel45.setText("SalesID");
        caBilling.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, -1, -1));

        BillID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        caBilling.add(BillID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 510, 190, -1));

        CancelBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CancelBill.setText("Cancel");
        CancelBill.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CancelBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBillActionPerformed(evt);
            }
        });
        caBilling.add(CancelBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, 70, 30));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel46.setText("Total Discount");
        caBilling.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, 20));

        givenPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        givenPrice.setText("0");
        caBilling.add(givenPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 180, 30));

        btnCancelAfterBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelAfterBill.setText("Bill Cancel");
        btnCancelAfterBill.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelAfterBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAfterBillActionPerformed(evt);
            }
        });
        caBilling.add(btnCancelAfterBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 550, 80, 30));

        jTabbedPane1.addTab("Billing", caBilling);

        caEditLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("User Name");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Password");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("New User Name");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("New Password");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, -1));

        txtcaProfUpuname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtcaProfUpuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 210, -1));

        txtcaProfUppswd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtcaProfUppswd, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 210, -1));

        txtcaProfUpnewuname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtcaProfUpnewuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 210, -1));

        txtcaProfUpnewpswd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel4.add(txtcaProfUpnewpswd, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 210, -1));

        btncaProfUNPSUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncaProfUNPSUpdate.setText("Update");
        btncaProfUNPSUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btncaProfUNPSUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncaProfUNPSUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(btncaProfUNPSUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, 70, -1));

        ClearEditLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ClearEditLogin.setText("Clear");
        ClearEditLogin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ClearEditLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearEditLoginActionPerformed(evt);
            }
        });
        jPanel4.add(ClearEditLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 80, -1));

        caEditLogin.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 490, 400));

        jTabbedPane1.addTab("Edit LogIn Data", caEditLogin);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Item Code");
        jPanel7.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 80, -1));

        btnCheckSTK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCheckSTK.setText("Check");
        btnCheckSTK.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCheckSTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckSTKActionPerformed(evt);
            }
        });
        jPanel7.add(btnCheckSTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 90, -1));

        ClearCheckstk.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ClearCheckstk.setText("Clear");
        ClearCheckstk.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ClearCheckstk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearCheckstkActionPerformed(evt);
            }
        });
        jPanel7.add(ClearCheckstk, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 90, 30));

        txtcaViewStk.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcaViewStk.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.add(txtcaViewStk, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 190, -1));

        caCheckStTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Quantity", "Price", "StockPrice"
            }
        ));
        jScrollPane2.setViewportView(caCheckStTb);

        jPanel7.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, -1, 380));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 960, 510));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Check Stock");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, -1, -1));

        jTabbedPane1.addTab("ViewStock", jPanel1);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1350, 650));

        Home.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        Home.setText("Home");
        Home.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        getContentPane().add(Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        Hardware d=new Hardware();
        d.show();
        dispose();
    }//GEN-LAST:event_HomeActionPerformed

    private void btncaBillAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncaBillAddActionPerformed
        String itmcode=txtcaBillIcode.getText();
        String itquant=(txtcaBillIquant.getText());
        String itmdisc=txtcaBillIdisc.getText();
        String givenPri=givenPrice.getText();
        
        double iquant=Double.parseDouble(itquant);
        double idisc=Double.parseDouble(itmdisc);
        
        double givenVal=Double.parseDouble(givenPri);
        double unitpri= Double.parseDouble((String)GetFromDatabase.getItemUniPrice(itmcode));
        double finalpr=0;
        double DBitmQuant=Double.parseDouble(GetFromDatabase.getQuant(itmcode));
        String remain_Quant=String.valueOf(DBitmQuant-iquant);
        
        DefaultTableModel df=(DefaultTableModel)tablecaBill.getModel();
        if(DBitmQuant>=iquant){
            if(givenVal==0){
                finalpr=(iquant*unitpri)-((iquant*unitpri)*idisc/100);  
            }else{
                finalpr=givenVal*iquant;
            }
            String totprice=String.valueOf(finalpr);
            String itmnum=String.valueOf(df.getRowCount()+1);
            String itmName=GetFromDatabase.getItemName(itmcode);
            String bilTot=String.valueOf(Double.parseDouble(txtcaBillTotal.getText())+finalpr);
        
            String data[]={itmnum,itmcode,itmName,itquant,itmdisc,totprice};
            df.addRow(data);
        
            String quer="Update stock set Quantity='"+remain_Quant+"' where Item_Code='"+itmcode+"'";
            String msg="";
            InsertUpdateDelete.setData(quer, msg);
        
            txtcaBillTotal.setText(bilTot);
            txtcaBillIcode.setText("");
            txtcaBillIquant.setText("0");
            txtcaBillIdisc.setText("0");
            givenPrice.setText("0");
        }else{
            JOptionPane.showMessageDialog(null, "Available stock is not sufficient, Avalabe stock : "+DBitmQuant);
        }
        
    }//GEN-LAST:event_btncaBillAddActionPerformed

    private void txtcaBillTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcaBillTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcaBillTotalActionPerformed

    private void btncaBillRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncaBillRemoveActionPerformed
       String Inum=txtcaBillIitmnumber.getText();
       
       int row=Integer.parseInt(Inum)-1;
       
       DefaultTableModel df=(DefaultTableModel)tablecaBill.getModel();
       
       double quant=Double.parseDouble((String)df.getValueAt(row, 3));
       double price=Double.parseDouble((String)df.getValueAt(row, 5));
       double total=Double.parseDouble(txtcaBillTotal.getText());
       
       String itmcode=String.valueOf(df.getValueAt(row, 1));
       
       double tot=total-price;
       double quantSt=Double.parseDouble(GetFromDatabase.getQuant(itmcode));
       double remain_Quant=quantSt+quant; 
       String newQuant=String.valueOf(remain_Quant);
       
       InsertUpdateDelete.setData("update stock set Quantity ='"+newQuant+"' where Item_Code='"+itmcode+"'", "Removed Item");
       
       
       txtcaBillTotal.setText(String.valueOf(tot));
       txtcaBillBalance.setText("0.00"); 
       
       df.removeRow(row);
    }//GEN-LAST:event_btncaBillRemoveActionPerformed

    private void btncaBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncaBillActionPerformed
        String Bill_Amount=txtcaTotalPayableAmount.getText();
        String logU_name=GetFromDatabase.getlastLogIn();
        int rcBill=tablecaBill.getRowCount();
        if(!"0".equals(Bill_Amount) && !"0".equals(txtcaBillPay.getText())){
            LocalDate date=DateTime.getDate();
            LocalTime time=DateTime.getTime();
            String salesID=ValidateStockBill.generateSalesID();
            String quer="insert into sales values('"+salesID+"','"+Bill_Amount+"','"+logU_name+"','"+date+"','"+time+"')";
            String msg="";
            InsertUpdateDelete.setData(quer, msg);
            BillID.setText(salesID);
        
            DefaultTableModel dt=(DefaultTableModel)tablecaBill.getModel();
            for(int i=0;i<rcBill;i++){
                String itmCode=(String)tablecaBill.getValueAt(i, 1);
                double quant=Double.parseDouble((String)tablecaBill.getValueAt(i, 3));
                double Price=Double.parseDouble((String)tablecaBill.getValueAt(i, 5));
                String uPrice=String.valueOf(Price/quant);
                String itmName=(String)tablecaBill.getValueAt(i, 2);
            
                String query="insert into sales_item values('"+salesID+"','"+itmCode+"','"+itmName+"','"+quant+"','"+uPrice+"')";
                String msgs="";
                InsertUpdateDelete.setData(query, msgs);
            }

            createItemList();
            Float change = Float.parseFloat(txtcaBillPay.getText()) - Float.parseFloat(txtcaTotalPayableAmount.getText());
            txtcaBillBalance.setText(df.format(change));
        

            PrinterJob pj = PrinterJob.getPrinterJob();
            pj.setPrintable( this, getPageFormat(pj));

            //      there's dialog
            pj.setPrintable( this);
            boolean ok = pj.printDialog();
            if (ok) {
                try {
                    pj.print();
                } catch (PrinterException ex) {
                }
            }
            txtcaBillTotal.setText("0");
            txtcaBillTotalDisc.setText("0");
            txtcaBillBalance.setText("0");
            txtcaBillPay.setText("0");
            BillID.setText("");
            txtcaTotalPayableAmount.setText("0");
            DefaultTableModel df=(DefaultTableModel)tablecaBill.getModel();
            while(df.getRowCount()!=0){
                df.removeRow(0);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Check 'Payable' amount and 'Pay' fields");
        }
        
    }//GEN-LAST:event_btncaBillActionPerformed

    private void btncaBillClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncaBillClearActionPerformed
        txtcaBillBalance.setText("0");
        txtcaBillPay.setText("0");
        txtcaBillTotal.setText("0");
        txtcaBillTotalDisc.setText("0");
        txtnumofitm.setText("0");
        txtcaTotalPayableAmount.setText("0");
        DefaultTableModel df=(DefaultTableModel)tablecaBill.getModel();
        while(df.getRowCount()!=0){
            df.removeRow(0);
        }
    }//GEN-LAST:event_btncaBillClearActionPerformed

    private void CalcaFinalPayableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcaFinalPayableActionPerformed
        double total=Double.parseDouble(txtcaBillTotal.getText());
        double discount=Double.parseDouble(txtcaBillTotalDisc.getText());
        double totalPayable= total-(total*discount/100);
        String Finalpay=String.valueOf(totalPayable);

        txtcaTotalPayableAmount.setText(Finalpay);
    }//GEN-LAST:event_CalcaFinalPayableActionPerformed

    private void btncaProfUNPSUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncaProfUNPSUpdateActionPerformed
        String pswdDB=GetFromDatabase.logdata(txtcaProfUpuname.getText());
        String newpswd=txtcaProfUpnewpswd.getText();
        String newUname=txtcaProfUpnewuname.getText();
        String uname=txtcaProfUpuname.getText();
        if(txtcaProfUppswd.getText() == null ? pswdDB == null : txtcaProfUppswd.getText().equals(pswdDB)){
            String quer="Update employee set UserName='"+newUname+"',Password='"+newpswd+"' where UserName='"+uname+"'";
            String msg="Updated Successfully";
            InsertUpdateDelete.setData(quer, msg);
        }else{
            JOptionPane.showMessageDialog(null, "Check entered data is correct");
        }
    }//GEN-LAST:event_btncaProfUNPSUpdateActionPerformed
    
    private DecimalFormat df3 = new DecimalFormat("#,##0.00");
    private void btnCheckSTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckSTKActionPerformed
       String Itm_Code=txtcaViewStk.getText();
        Connection con=null;
        Statement st=null;

        try
        {
            con=ConnectionProvider.getcon();
            st=con.createStatement();

            if("".equals(txtcaViewStk.getText())){

                String query ="SELECT * FROM stock ORDER BY Item_Code ASC";

                ResultSet resultSet = st.executeQuery(query);

                while(resultSet.next()){
                    String ICode=String.valueOf(resultSet.getString("Item_Code"));
                    String IName=String.valueOf(resultSet.getString("Item"));
                    
                    String selpri=String.valueOf(resultSet.getBigDecimal("Unit_Price"));
                    String Buypri=String.valueOf(resultSet.getBigDecimal("Retail_price"));
                    
                    String quant=String.valueOf(df3.format(resultSet.getDouble("Quantity")));

                    String data[]={ICode,IName,quant,selpri,Buypri};

                    DefaultTableModel df=(DefaultTableModel)caCheckStTb.getModel();
                    df.addRow(data);

                }
            }else{

                String query ="SELECT * FROM stock WHERE Item_Code LIKE '%"+Itm_Code+"%'";

                ResultSet resultSet = st.executeQuery(query);

                while(resultSet.next()){
                    String ICode=String.valueOf(resultSet.getString("Item_Code"));
                    String IName=String.valueOf(resultSet.getString("Item"));
                    
                    String selpri=String.valueOf(resultSet.getBigDecimal("Unit_Price"));
                    String Buypri=String.valueOf(resultSet.getBigDecimal("Retail_price"));
                    
                    String quant=String.valueOf(df3.format(resultSet.getDouble("Quantity")));

                    String data[]={ICode,IName,quant,selpri,Buypri};

                    DefaultTableModel df=(DefaultTableModel)caCheckStTb.getModel();
                    df.addRow(data);

                }

            }
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);

        }         

    }//GEN-LAST:event_btnCheckSTKActionPerformed

    private void ClearCheckstkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearCheckstkActionPerformed
        txtcaViewStk.setText("");
        DefaultTableModel df=(DefaultTableModel)caCheckStTb.getModel();
        while(df.getRowCount()!=0){
            df.removeRow(0);
        }
        
    }//GEN-LAST:event_ClearCheckstkActionPerformed

    private void CheckStkBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckStkBillActionPerformed
        String Itm_Code=txtcaBillIcode.getText();
        Connection con=null;
        Statement st=null;

        try
        {
            con=ConnectionProvider.getcon();
            st=con.createStatement();

            if("".equals(txtcaBillIcode.getText())){

                String query ="SELECT * FROM stock ORDER BY Item_Code ASC";

                ResultSet resultSet = st.executeQuery(query);

                while(resultSet.next()){
                    String ICode=String.valueOf(resultSet.getString("Item_Code"));

                    String selpri=String.valueOf(resultSet.getBigDecimal("Unit_Price"));

                    String quant=String.valueOf(df3.format(resultSet.getDouble("Quantity")));
                    String itmName=String.valueOf(resultSet.getString("Item"));
                    String disc=String.valueOf(resultSet.getInt("Discount"));

                    String data[]={ICode,itmName,quant,selpri,disc};

                    DefaultTableModel df=(DefaultTableModel)billShowStock.getModel();
                    df.addRow(data);

                }
            }else{

                String query ="SELECT * FROM stock WHERE Item_Code LIKE '%"+Itm_Code+"%'";

                ResultSet resultSet = st.executeQuery(query);

                while(resultSet.next()){
                    String ICode=String.valueOf(resultSet.getString("Item_Code"));

                    String selpri=String.valueOf(resultSet.getBigDecimal("Unit_Price"));

                    String quant=String.valueOf(df3.format(resultSet.getDouble("Quantity")));
                    String itmName=String.valueOf(resultSet.getString("Item"));
                    String disc=String.valueOf(resultSet.getInt("Discount"));

                    String data[]={ICode,itmName,quant,selpri,disc};

                    DefaultTableModel df=(DefaultTableModel)billShowStock.getModel();
                    df.addRow(data);

                }

            }
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_CheckStkBillActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel df=(DefaultTableModel)billShowStock.getModel();
        txtcaBillIcode.setText("");
        while(df.getRowCount()!=0){
            df.removeRow(0);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void ClearEditLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearEditLoginActionPerformed
        txtcaProfUpuname.setText("");
        txtcaProfUppswd.setText("");
        txtcaProfUpnewuname.setText("");
        txtcaProfUpnewpswd.setText("");
    }//GEN-LAST:event_ClearEditLoginActionPerformed

    private void CancelBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBillActionPerformed
        int rcBill=tablecaBill.getRowCount();
        for(int i=0;i<rcBill;i++){
            String icode=(String)tablecaBill.getValueAt(i, 1);
            double quant=Double.parseDouble((String)tablecaBill.getValueAt(i, 3));
            double DBquant=Double.parseDouble(GetFromDatabase.getQuant(icode));
            double totQuant=quant+DBquant;
            String query="Update stock set Quantity='"+totQuant+"' where Item_Code='"+icode+"'";
            String msg="Bill Cancelled";
            InsertUpdateDelete.setData(query, msg);
        }
        DefaultTableModel df=(DefaultTableModel)tablecaBill.getModel();
        while(df.getRowCount()!=0){
            df.removeRow(0);
        }
        txtcaBillIcode.setText("");
        txtcaBillIquant.setText("");
        txtcaBillIdisc.setText("0");
        txtcaBillIitmnumber.setText("");
        txtnumofitm.setText("0");
        txtcaBillTotal.setText("0.00");
        txtcaBillTotalDisc.setText("0");
        txtcaTotalPayableAmount.setText("0");
        txtcaBillPay.setText("0.00");
        txtcaBillBalance.setText("0.00");
    }//GEN-LAST:event_CancelBillActionPerformed

    private void billShowStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billShowStockMouseClicked
        int i=billShowStock.getSelectedRow();
        TableModel model=billShowStock.getModel();
        txtcaBillIcode.setText((String) model.getValueAt(i, 0));
        txtcaBillIdisc.setText((String) model.getValueAt(i, 4));
    }//GEN-LAST:event_billShowStockMouseClicked

    private void btnCancelAfterBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAfterBillActionPerformed
        String SaleID=GetFromDatabase.getlastSaleID();
        Connection con=null;
        Statement st=null;
        String salesID=BillID.getText();

        try
        {
            con=ConnectionProvider.getcon();
            st=con.createStatement();

            if("".equals(salesID)){
                String query ="SELECT * FROM sales_item where SalesNum = '"+SaleID+"' ";

                ResultSet resultSet = st.executeQuery(query);

                while(resultSet.next()){
                    String itmCode=String.valueOf(resultSet.getString("ItemCode"));
                    double quant=resultSet.getDouble("Quantity");
                    double DBquant=Double.parseDouble(GetFromDatabase.getQuant(itmCode));
                    double newQuant=quant+DBquant;
                    InsertUpdateDelete.setData("Delete FROM sales_item where SalesNum='"+SaleID+"'", "");
                    InsertUpdateDelete.setData("DELETE FROM sales where salesNum='"+SaleID+"'", "");
                    InsertUpdateDelete.setData("Update stock set Quantity='"+newQuant+"' where Item_Code='"+itmCode+"'", "");

                }
                JOptionPane.showMessageDialog(null, "Bill Cancelled");
            }else{
                String query ="SELECT * FROM sales_item where SalesNum = '"+salesID+"' ";

                ResultSet resultSet = st.executeQuery(query);

                while(resultSet.next()){
                    String itmCode=String.valueOf(resultSet.getString("ItemCode"));
                    double quant=resultSet.getDouble("Quantity");
                    double DBquant=Double.parseDouble(GetFromDatabase.getQuant(itmCode));
                    double newQuant=quant+DBquant;
                    InsertUpdateDelete.setData("Delete FROM sales_item where SalesNum='"+salesID+"'", "");
                    InsertUpdateDelete.setData("DELETE FROM sales where salesNum='"+salesID+"'", "");
                    InsertUpdateDelete.setData("Update stock set Quantity='"+newQuant+"' where Item_Code='"+itmCode+"'", "");

                }
                JOptionPane.showMessageDialog(null, "Bill Cancelled");
            }
            
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);

        }

        
    }//GEN-LAST:event_btnCancelAfterBillActionPerformed

    private java.util.ArrayList<Item> itemList = new java.util.ArrayList<>();//creating data list to print in bill row

    private java.util.ArrayList<Item> createItemList() {
        java.util.ArrayList<Item> iL = new java.util.ArrayList<Item>();
        Item itm = null;
        for (int i = 0; i < tablecaBill.getRowCount(); i++) {
            String icode=tablecaBill.getValueAt(i, 1).toString();
            String item = tablecaBill.getValueAt(i, 2).toString();
            String qty = tablecaBill.getValueAt(i, 3).toString();
            String itmNum = tablecaBill.getValueAt(i, 0).toString();
            
            String disc=tablecaBill.getValueAt(i, 4).toString();
            String price=null;
            String unit=GetFromDatabase.GetItmUnit(tablecaBill.getValueAt(i, 1).toString());
            double dbpri=Double.parseDouble(GetFromDatabase.getItemUniPrice(icode));
            double addedPri= (Double.valueOf((String) tablecaBill.getValueAt(i, 5))/Double.valueOf(qty));
            /*if(dbpri!=addedPri && "0".equals(disc)){
                double Pri= (Double.valueOf((String) adBillTB.getValueAt(i, 5))/Double.valueOf(qty));
                price=String.valueOf(Pri);
            }else{
                double Pri=Double.parseDouble(GetFromDatabase.getItemUniPrice(icode));
                price=String.valueOf(Pri);
            }*/
            itm = new Item(itmNum,item, qty, String.valueOf(addedPri),String.valueOf(dbpri),disc,unit);
            iL.add(itm);
        }
        return iL;
    }
    private DecimalFormat df = new DecimalFormat("#,##0.00");
    
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        Float totalAmount = 0.0F;
        Float change = 0.0F;
        String readFile = System.getProperty("user.dir") + "/src/main/resources/images/my pic.png";
        ImageIcon icon = new ImageIcon(readFile);
        int result = NO_SUCH_PAGE;
        if (pageIndex == 0) {

            Graphics2D g2d = (Graphics2D) graphics;
            double width = pageFormat.getImageableWidth();
            g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

            FontMetrics metrics = g2d.getFontMetrics(new Font("Arial", Font.BOLD, 7));
            try {
                LocalTime time= LocalTime.now();
                LocalDate date= LocalDate.now();
                String user=GetFromDatabase.getlastLogIn();
                int y = 15;
                int x=10;
                int yShift = 10;
                int headerRectHeight = 15;
                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());
                double wh = pageFormat.getImageableWidth();
                double ht = pageFormat.getImageableHeight();
                g2d.drawImage(null, 0, 0, (int) wh, (int) ht, null);

                g2d.setFont(new Font("Monospaced", Font.BOLD, 9));
                g2d.drawImage(icon.getImage(), 75, 20, 30, 30, rootPane);
                y += yShift + 30;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString("Hesara Hardware , ", 10, y);
                y += yShift;
                g2d.drawString("NO:06,Janajaya MiniCity, ", 10, y);
                y += yShift;
                g2d.drawString("Ground floor,Obesekarapura, ", 10, y);
                y += yShift;
                g2d.drawString("Rajagiriya ", 10, y);
                y += yShift;
                g2d.drawString("contact : 0770157566 ", 10, y);
                y += yShift;
                g2d.drawString("          0711057566, ", 10, y);
                y += yShift;
                g2d.drawString("(Whatsapp)0776077295, ", 10, y);
                y += yShift;
                g2d.drawString("Bill_ID :"+BillID.getText(), 10, y);
                y += yShift;
                g2d.drawString("Time :"+time, 10, y);
                y += yShift;
                g2d.drawString("Date :"+date, 10, y);
                y += yShift;
                g2d.drawString("Cashier :"+user, 10, y);
                y += yShift;
                y += yShift;
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += headerRectHeight;

                g2d.drawString(" Item            Price  ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += headerRectHeight;

                for (Item item : createItemList()) {
                    g2d.drawString(" " + item.getItem() + "                    ", 10, y);
                    y += yShift;
                    g2d.drawString(item.getItmNum()+". " + item.getQty()+""+item.getItemUnit()+ " x " + item.getRealPrice()+"x"+item.getDiscount()+"%", 5, y);
                    g2d.drawString(String.valueOf(df.format((Float.parseFloat(item.getQty())) * (Float.parseFloat(item.getgivenPrice())))), 100, y);
                    y += yShift;
                    y += yShift;
                    totalAmount = totalAmount + (Float.parseFloat(item.getQty())) * (Float.parseFloat(item.getgivenPrice()));

                }
                Float cash = Float.valueOf(txtcaBillPay.getText());//payed amount
                Float totdisc=Float.valueOf(txtcaBillTotalDisc.getText());
                Float finalBill=Float.valueOf(txtcaTotalPayableAmount.getText());

                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Total   : " + String.valueOf(df.format(totalAmount)) + "   ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" TotalDiscount   : " + String.valueOf(df.format(totdisc)) + "%   ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Final Bill   : " + String.valueOf(df.format(finalBill)) + "   ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Cash    : " + String.valueOf(df.format(cash)) + "   ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Change  : " + String.valueOf(df.format(Float.valueOf(txtcaBillPay.getText()) - finalBill)) + "   ", 10, y);
                y += yShift;
                y += yShift;
                y += yShift;

                g2d.drawString("******************************", 10, y);
                y += yShift;
                g2d.drawString("  THANK YOU, COME AGAIN!! ", 10, y);
                y += yShift;
                g2d.drawString("******************************", 10, y);
                y += yShift;

            } catch (Exception e) {
                e.printStackTrace();
            }
            result = PAGE_EXISTS;
        }
        return result;
    }

    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double width = pf.getImageableWidth();
        double height = pf.getImageableHeight();
        paper.setSize(width, height);
        paper.setImageableArea(0, 10, width, height - cm_to_pp(1));
        pf.setOrientation(PageFormat.PORTRAIT);
        pf.setPaper(paper);
        return pf;
    }

    protected static double cm_to_pp(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 58d;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cashier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BillID;
    private javax.swing.JButton CalcaFinalPayable;
    private javax.swing.JButton CancelBill;
    private javax.swing.JButton CheckStkBill;
    private javax.swing.JButton ClearCheckstk;
    private javax.swing.JButton ClearEditLogin;
    private javax.swing.JButton Home;
    private javax.swing.JTable billShowStock;
    private javax.swing.JButton btnCancelAfterBill;
    private javax.swing.JButton btnCheckSTK;
    private javax.swing.JButton btncaBill;
    private javax.swing.JButton btncaBillAdd;
    private javax.swing.JButton btncaBillClear;
    private javax.swing.JButton btncaBillRemove;
    private javax.swing.JButton btncaProfUNPSUpdate;
    private javax.swing.JPanel caBilling;
    private javax.swing.JTable caCheckStTb;
    private javax.swing.JPanel caEditLogin;
    private javax.swing.JTextField givenPrice;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tablecaBill;
    private javax.swing.JTextField txtcaBillBalance;
    private javax.swing.JTextField txtcaBillIcode;
    private javax.swing.JTextField txtcaBillIdisc;
    private javax.swing.JTextField txtcaBillIitmnumber;
    private javax.swing.JTextField txtcaBillIquant;
    private javax.swing.JTextField txtcaBillPay;
    private javax.swing.JTextField txtcaBillTotal;
    private javax.swing.JTextField txtcaBillTotalDisc;
    private javax.swing.JPasswordField txtcaProfUpnewpswd;
    private javax.swing.JTextField txtcaProfUpnewuname;
    private javax.swing.JPasswordField txtcaProfUppswd;
    private javax.swing.JTextField txtcaProfUpuname;
    private javax.swing.JTextField txtcaTotalPayableAmount;
    private javax.swing.JTextField txtcaViewStk;
    private javax.swing.JTextField txtnumofitm;
    // End of variables declaration//GEN-END:variables
}
